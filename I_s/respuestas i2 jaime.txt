1)
	1.a) 2¹⁷ bits
	1.b) 2¹⁵ bits
	2) la estatica se compila junto con el programa principal, por lo que se puede acceder a ella sin referencias a librerias externas y es mas rapido y la dinamica, no se compila con el programa y para acceder a ella hay que tener referencias es esta, pero tambien tiene la ventaja que mas de 1 proceso puede ocupar la libreria a la vez
	3.a) asignacion contigua:
	fragmentacion externa: ocurre al sacar un proceso y despues intentar meter un proceso mas grande o mas chico en memoria
	fragmentacion interna: no ocurre
	compartir codigo: unicamente hay que saber en donde esta cargado el otro programa para utilizar su codigo
	aumentar memoria: no se puede generalmente ya que hay programas cargados usto despues del tuyo
	
	segmentacion pura:
	fragmentacion externa: ocurre al sacar un proceso o una parte de este, deja un espacio que es muy poco probable que sea ocupado entero por una de las partes de otro 
	fragmentacion interna: no ocurre
	compartir codigo: hay que saber em donde esta cargado el codigo del otro programa
	aumentar memoria: si se puede ya que puedo cambiar solo el stack o el heap de lugar, pero es caro
	
	paginacion pura:
	fragmentacion externa: no existe
	fragmentacion interna: ocure principalmente el el ultima de las paginas ya que no se llena completamnete
	compartir codigo: es mas complicado pq hay qie saber la direccion fisica que el programa no conoce
	aumentar memoria: es muy facil, solo hay que agregar mas paginas y la tabla de pagina se encarga de 	traducir
	
	4)
	a)pag 0 ofset 2015 (11111011111)
	b)pag 1 ofset 1001 (01111010101)
	c)pag 161 (10100001)   ofset 376 (00101111000)  
	d)pag 317 (100111101) ofset 784 (01100010000)

	5) 
	a) 2¹⁰
	b) 2⁵
	c) 64 kb
	
	6)
	a) 120 ns
	b) 80 ns
	c) 77 ns

2)	1)
	a) 1
	b) n
	
	2)
	a) 3 -> 9	4 -> 6	5 -> 6 
	b) 3 -> 11	4-> 8 	5-> 6
	c) 3 -> 7	4 -> 6  5 -> 6

	3)
	a) que estoy trabanjo dentro de in working set parecido, osea siempre ocupando paginas similares
	b) que estoy trabajando siempre con paginas muy distintas

	4) 
	a) 111223411122 con 3 frames disponibles LRU -> m,h,h,m,h,m,m,m,h,h,m,h
						 LFU -> m,h,h,m,h,m,m,h,h,h,h,h
	b) 11112222343434	LRU -> m,h,h,h,m,h,h,h,m,m,m,m,m,m
				LFU -> m,h,h,h,m,h,h,h,m,m,h,h,h,h
	5)
	a) define el delta de tiempo para el cual estamos buscando en numero optimo de paginas a tener en memoria
	b) si va a ir ajustando, en la medida que existan mas page faults, van a haber mas paginas disponibles en la siguiente iteracion y menos en caso contrario, la idea es llegar a la cantidad optima de paginas 
	c) habrian muy pocos pages  faults, pero el proceso utilizaria mucha ram

3)	1)
	a) 1075 ms
	b) 415ms
	c) 520ms
	
	2)
	a) raid0 -> 0	raid1 -> n/2	raid5 -> 1
	b) 	->n*b	   ->n*b/2  	  -> (n-1)*b
	c) 	1		2		1

	3)
	a) 2⁴² BYTES
	b) 16 gb + 64mb + 16gb
	c) 6kb
	d) 10mb + 16 kb
	d) 2gb + 8mb + 6kb
